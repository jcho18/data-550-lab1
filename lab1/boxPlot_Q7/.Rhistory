library(nlme)
lob.lme <- lme(height ~ age, random = ~ age - 1/Seed, data = Loblolly)
resid(lob.lme)
resid(lob.lme, level=2)
resid(lob.lme, level=1)
xyplot(resid(lob.lme) ~ |Seed, data = Loblolly)
library(lattice)
xyplot(resid(lob.lme) ~ age|Seed, data = Loblolly)
lob.lme <- lme(height ~ poly(age, 2), random = ~  1/Seed, data = Loblolly)
xyplot(resid(lob.lme) ~ age|Seed, data = Loblolly)
lob.lme <- lme(height ~ poly(age, 2), random = ~ age - 1/Seed, data = Loblolly)
xyplot(resid(lob.lme) ~ age|Seed, data = Loblolly)
lob.lme <- lme(height ~ poly(age, 2), random = ~ poly(age, 2)/Seed, data = Loblolly)
library(shiny)
install.packages("shiny")
library(shiny)
help(package="shiny")
server <- shinyServer(function(input,output){
    output$main_plot <- renderPlot({
        data <- input$datavalues
        labels <- input$labels
        data <- as.numeric(strsplit(data, " ")[[1]])
        labels <- strsplit(labels, " ")[[1]]
        if (length(data) > 0) {
            colororder <- c(1,4,12,8,10,13,9,2,3,14,11,7,15,6,16,5)
            if (length(data) == length(labels)) names(data) <- labels
            barplot(data, col=(rainbow(16))[colororder])
        }   else  {
            plot(c(0,1),c(0,1), type="n", axes=FALSE, xlab="", ylab="")
            text(.5, .95, "Enter some data if you want to see a bar chart.",
                     col="red", cex=1.25)
        }
    })
})
ui <- shinyUI(pageWithSidebar(
  headerPanel("Bar Chart"),
  sidebarPanel(
    textInput("datavalues", "Data:", ""),
    helpText("Enter data values here, separated by blank spaces"),
    textInput("labels", "Labels:", ""),
    helpText("Enter the category names here, separated by blank spaces")
  ),
  mainPanel(
    plotOutput(outputId='main_plot',width='480px',height='480px')
  )
))
ls()
rm(lob.lme)
setwd("shinyTmp/")
dump("server", "server.R")
dump("ui", "ui.R")
rm(list=objects())
q()
